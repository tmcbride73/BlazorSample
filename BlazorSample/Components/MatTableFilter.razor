@using BlazorSample.Data

@inject UserService UserService

<p>
    <EnterKeyEventArea OnEnterPressed="filterUsers">
        <MatTextField TValue="string" Label="User ID" Icon="filter_list" @bind-Value="@userIdFilter"></MatTextField>
        <MatTextField TValue="string" Label="First Name" Icon="filter_list" @bind-Value="@firstNameFilter"></MatTextField>
        <MatTextField TValue="string" Label="Last Name" Icon="filter_list" @bind-Value="@lastNameFilter"></MatTextField>
        <MatTextField TValue="string" Label="Department" Icon="filter_list" @bind-Value="@departmentFilter"></MatTextField>
        <MatTextField TValue="string" Label="Phone Number" Icon="filter_list" @bind-Value="@phoneNumberFilter"></MatTextField>
    </EnterKeyEventArea>
</p>

<p>
    <MatButton @onclick="filterUsers" Raised="true">Search with Filters</MatButton>
</p>

@code {

    [Parameter]
    public List<User> Users { get; set; }

    public string userIdFilter { get; set; } = "";
    public string firstNameFilter { get; set; } = "";
    public string lastNameFilter { get; set; } = "";
    public string departmentFilter { get; set; } = "";
    public string phoneNumberFilter { get; set; } = "";

    [Parameter]
    public EventCallback<List<User>> UsersChanged { get; set; }

    private async Task filterUsers()
    {
        Users = UserService.GetAllUsers();
        
        if(userIdFilter == null && firstNameFilter == null && lastNameFilter == null && departmentFilter == null && phoneNumberFilter == null){
            
        }else{
            Users = (from user in Users
                 where (user.UserId.ToUpper().Contains(userIdFilter.ToUpper()) || userIdFilter == "")
                 && (user.FirstName.ToUpper().Contains(firstNameFilter.ToUpper()) || firstNameFilter == "")
                 && (user.LastName.ToUpper().Contains(lastNameFilter.ToUpper()) || lastNameFilter == "")
                 && (user.Department.ToUpper().Contains(departmentFilter.ToUpper()) || departmentFilter == "")
                 && (user.PhoneNumber.ToUpper().Contains(phoneNumberFilter.ToUpper()) || phoneNumberFilter == "")
                 select user).ToList();
        }


        await UsersChanged.InvokeAsync(Users);
    }
}
